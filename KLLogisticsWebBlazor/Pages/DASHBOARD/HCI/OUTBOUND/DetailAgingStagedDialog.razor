@layout MainLayout
@inject HttpClient Http
@inject IJSRuntime jsRuntime
@inject IDialogService DialogService
@using KLLogisticsWebBlazor.Pages.DASHBOARD.AHI.INBOUND;
@using KLLogisticsWebBlazor.Pages.DASHBOARD.HCI.OUTBOUND;
@using MudBlazor;
@using Newtonsoft.Json;
@using System.Net.Http.Headers;
@using KLLogisticsWebBlazor.Config;
@using KLLogisticsWebBlazor.Models;
@using Syncfusion.Blazor.Charts;
@using Syncfusion.Blazor.ProgressBar;
@using Syncfusion.Blazor.TreeGrid;
@using Syncfusion.Blazor.Data;
@using Syncfusion.Blazor.Grids;
@using Syncfusion.Blazor.DropDowns;
@inject NavigationManager NavigationManager;
@using System.Globalization;
@using System.Net.Http.Json
@using MudBlazor.Examples.Data.Models
@inject HttpClient httpClient

<div class="table-dialog" style="width: @Width; height: @Height;">
    <MudTable Items="@Elements" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<deatilAgingStaged,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Detail DO Aging Staged</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>ORDERKEY</MudTh>
            <MudTh>EXTERNORDERKEY</MudTh>
            <MudTh>TIPE DO</MudTh>
            <MudTh>Storerkey</MudTh>
            <MudTh>No LC</MudTh>
            <MudTh>Req Ship Date</MudTh>
            <MudTh>Kode Store</MudTh>
            <MudTh>Store Name / Customer Name</MudTh>
            <MudTh>Aging Status Staged(Day)</MudTh>
            <MudTh>Aging Delivery date(Day)</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="ORDERKEY">@context.orderkey</MudTd>
            <MudTd DataLabel="EXTERNORDERKEY">@context.externorderkey</MudTd>
            <MudTd DataLabel="TIPE DO">@context.DESCRIPTION</MudTd>
            <MudTd DataLabel="storerkey">@context.storerkey</MudTd>
            <MudTd DataLabel="No LC">@context.route</MudTd>
            <MudTd DataLabel="Req Ship">@context.ReqShipDate</MudTd>
            <MudTd DataLabel="Kode Store">@context.KODE_STORE</MudTd>
            <MudTd DataLabel="Store Name / Customer Name">@context.C_COMPANY</MudTd>
            <MudTd DataLabel="Aging Status Staged(Day)">@context.Aging_Staged_Day</MudTd>
            <MudTd DataLabel="Aging Delivery date(Day)">@context.Aging_Delivery_Day</MudTd>

        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>

    <div class="d-flex flex-wrap mt-4">
        <MudSwitch @bind-Checked="@hover" Color="Color.Primary">Hover</MudSwitch>
        <MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>
        <MudSwitch @bind-Checked="@striped" Color="Color.Tertiary">Striped</MudSwitch>
        <MudSwitch @bind-Checked="@bordered" Color="Color.Warning">Bordered</MudSwitch>
        <MudSpacer />
        <div style="min-width:200px;">
            <MudText Inline="true" Class="align-self-center">Selected1: @selectedItem1?.DESCRIPTION</MudText>
        </div>
    </div>
</div>

<style>

</style>
@code {
    [Parameter] public string Width { get; set; } = "100%"; // Lebar default 80%
    [Parameter] public string Height { get; set; } = "100%"; // Tinggi default 80%
    public static string WHSEID = "";
    public static string DATE1 = "";
    public static string DATE2 = "";
    private bool dense = true;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = true;
    private string searchString1 = "";
    private deatilAgingStaged selectedItem1 = null;
    private HashSet<deatilAgingStaged> selectedItems = new HashSet<deatilAgingStaged>();
    private List<deatilAgingStaged> Elements = new List<deatilAgingStaged>();


    protected override async Task OnInitializedAsync()
    {
        WHSEID = LoginModuleAtribut.Facility;
        DATE1 = DateTime.Now.ToString("yyyy-MM-dd");
        DATE2 = DateTime.Now.AddDays(1).ToString("yyyy-MM-dd");

        var CSdalamkota = await Http.GetAsync(UrlModule.BaseModuleUrl + $"API/HCI/OUTBOUND/CHECK&PACK/13/wmwhse4/DALAM KOTA/{DATE1}/{DATE2}/GRW/");
        var valueCSdalamkota = await CSdalamkota.Content.ReadAsStringAsync();
        Elements = JsonConvert.DeserializeObject<List<deatilAgingStaged>>(valueCSdalamkota);
    }

    private bool FilterFunc1(deatilAgingStaged deatilAgingStaged) => FilterFunc(deatilAgingStaged, searchString1);

    private bool FilterFunc(deatilAgingStaged deatilAgingStaged, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (deatilAgingStaged.orderkey.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (deatilAgingStaged.DESCRIPTION.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{deatilAgingStaged.C_COMPANY} {deatilAgingStaged.KODE_STORE} {deatilAgingStaged.DESCRIPTION}".Contains(searchString))
            return true;
        return false;
    }
}
